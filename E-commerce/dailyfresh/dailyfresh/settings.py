"""
Django settings for dailyfresh1807 project.

Generated by 'django-admin startproject' using Django 1.8.2.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import sys
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
sys.path.insert(0,os.path.join(BASE_DIR,"apps"))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'ml8t9r)6+e$c%4)r##7r(=1%$o6ha&g13vziaoz$i*tdp0t*cx'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'tinymce',
    'haystack', #注册全文检索框架
    "user",
    "goods",
    "cart",
    "order",
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
)

ROOT_URLCONF = 'dailyfresh1807.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,"templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'dailyfresh1807.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "dailyfresh1807",
        "USER": "root",
        "PASSWORD": "root",
        "HOST": "192.168.163.129",
        "PORT": 3306
    }
}



# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

# LANGUAGE_CODE = 'en-us'
LANGUAGE_CODE = 'zh-hans'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/

STATIC_URL = '/static/'  #配置下面文件的路径  /static/css/reset.css
STATICFILES_DIRS=[os.path.join(BASE_DIR,"static")]  #配置项目中静态文件存储位置


# 替换django自带的认证系统
AUTH_USER_MODEL="user.User"


# 富文本编辑器配置
TINYMCE_DEFAULT_CONFIG ={
    'theme' : "advanced",
    'width' : 600,
    'height': 400
}

# 下面开始设置发送邮件配置
EMAIL_BACKEND="django.core.mail.backends.smtp.EmailBackend"
#smtp服务器地址
EMAIL_HOST="smtp.163.com"
#smtp服务器端口号
EMAIL_POST=25
#发送邮件的邮箱 自己的邮箱
EMAIL_HOST_USER="15231128853@163.com"
#在邮箱中设置的客户端授权密码
EMAIL_HOST_PASSWORD="zxk123"
#收件人看到的发件人
EMAIL_FROM="天天生鲜<15231128853@163.com>"


#Django的缓存配置
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://192.168.163.129:6379/9",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}

# 配置session存储
SESSION_ENGINE = "django.contrib.sessions.backends.cache"
SESSION_CACHE_ALIAS = "default"

# 配置登录url地址
LOGIN_URL="/user/login"

# 设置Django文件存储类,下面的PDFSStorage是自己定义的,前面的名字固定
DEFAULT_FILE_STORAGE = "utils.fdfs.storage.FDFSStorage"

#下面两个前面的两个名字不固定,对应storage.py文件 优化问题
# 设置Fdfs使用的client.conf 文件路径对应storage.py文件
FDFS_CLIENT_CONF="./utils/fdfs/client.conf"

# 设置Fdfs存储服务器上的nginx的IP和端口号
# 这的路径必须写对，不能少/
FDFS_URL="http://192.168.163.129/"


#配置全文检索框架
HAYSTACK_CONNECTIONS = {
    'default': {
        #使用whoosh引擎
        'ENGINE': 'haystack.backends.whoosh_cn_backend.WhooshEngine',
        #索引文件路径
        'PATH': os.path.join(BASE_DIR, 'whoosh_index'),
    }
}
#当添加、修改、删除数据时，自动生成索引
HAYSTACK_SIGNAL_PROCESSOR = 'haystack.signals.RealtimeSignalProcessor'

# 指定搜索结果每页显示的条数
HAYSTACK_SEARCH_RESULTS_PER_PAGE = 1